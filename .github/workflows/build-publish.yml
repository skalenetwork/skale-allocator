name: Build and publish
on:
  pull_request:
    types: [closed]
    branches:
      - master
      - develop
      - beta
      - stable

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
    - uses: actions/checkout@v2

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    
    - name: Install NODE JS
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Install project
      run: yarn install
    
    - name: Build and publish container
      run: |
        export BRANCH=${GITHUB_REF##*/}
        echo "Branch $BRANCH"
        export VERSION=$(bash ./scripts/calculate_version.sh)
        echo "Version $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        ( test $BRANCH = "stable" || test $BRANCH = "master" && export PRERELEASE=false ) || export PRERELEASE=true
        echo "PRERELEASE=$PRERELEASE" >> $GITHUB_ENV
        bash ./scripts/build_and_publish.sh
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: ${{ env.VERSION }}
        draft: false
        prerelease: ${{ env.PRERELEASE }}
